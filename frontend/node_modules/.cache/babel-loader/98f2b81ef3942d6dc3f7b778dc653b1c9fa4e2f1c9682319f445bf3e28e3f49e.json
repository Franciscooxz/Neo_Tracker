{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fran\\\\Desktop\\\\Neo_Tracker\\\\frontend\\\\src\\\\components\\\\ui\\\\LoadingSpinner.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/ui/LoadingSpinner.jsx\nimport React from 'react';\n\n/**\r\n * LoadingSpinner - Componente de carga reutilizable\r\n * \r\n * EVOLUCIÓN TÉCNICA:\r\n * - CSS Animations (2009) → CSS3 Transforms (2012) → Modern CSS Grid/Flexbox\r\n * - Antes: imágenes GIF → Ahora: CSS puro más eficiente\r\n * - Tailwind CSS: Utility-first approach desde 2017\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  color = 'blue',\n  text = 'Cargando...',\n  className = ''\n}) => {\n  // Configuración de tamaños - Escalabilidad moderna\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  // Configuración de colores - Design system approach\n  const colorClasses = {\n    blue: 'border-blue-500',\n    green: 'border-green-500',\n    red: 'border-red-500',\n    purple: 'border-purple-500',\n    yellow: 'border-yellow-500'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center p-4 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `\n          ${sizeClasses[size]} \n          ${colorClasses[color]}\n          border-4 border-t-transparent border-solid rounded-full\n          animate-spin\n        `,\n      role: \"status\",\n      \"aria-label\": \"Cargando contenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm font-medium text-gray-600 dark:text-gray-300\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n// Variante para elementos inline\n_c = LoadingSpinner;\nexport const InlineSpinner = ({\n  size = 'sm',\n  color = 'blue'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6'\n  };\n  const colorClasses = {\n    blue: 'border-blue-500',\n    green: 'border-green-500',\n    red: 'border-red-500'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `\n        ${sizeClasses[size]} \n        ${colorClasses[color]}\n        border-2 border-t-transparent border-solid rounded-full\n        animate-spin inline-block\n      `,\n    role: \"status\",\n    \"aria-label\": \"Cargando\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n// Spinner para páginas completas\n_c2 = InlineSpinner;\nexport const FullPageSpinner = ({\n  text = 'Cargando asteroides...'\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-white dark:bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"xl\",\n        color: \"blue\",\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para estados de carga\n_c3 = FullPageSpinner;\nexport const useLoading = (initialState = false) => {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(initialState);\n  const startLoading = () => setIsLoading(true);\n  const stopLoading = () => setIsLoading(false);\n  return {\n    isLoading,\n    startLoading,\n    stopLoading\n  };\n};\n_s(useLoading, \"fMKmY6FR0gjD3iwSPVCRks+1E+U=\");\nexport default LoadingSpinner;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"InlineSpinner\");\n$RefreshReg$(_c3, \"FullPageSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","text","className","sizeClasses","sm","md","lg","xl","colorClasses","blue","green","red","purple","yellow","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","InlineSpinner","_c2","FullPageSpinner","_c3","useLoading","initialState","_s","isLoading","setIsLoading","useState","startLoading","stopLoading","$RefreshReg$"],"sources":["C:/Users/Fran/Desktop/Neo_Tracker/frontend/src/components/ui/LoadingSpinner.jsx"],"sourcesContent":["// frontend/src/components/ui/LoadingSpinner.jsx\r\nimport React from 'react';\r\n\r\n/**\r\n * LoadingSpinner - Componente de carga reutilizable\r\n * \r\n * EVOLUCIÓN TÉCNICA:\r\n * - CSS Animations (2009) → CSS3 Transforms (2012) → Modern CSS Grid/Flexbox\r\n * - Antes: imágenes GIF → Ahora: CSS puro más eficiente\r\n * - Tailwind CSS: Utility-first approach desde 2017\r\n */\r\n\r\nconst LoadingSpinner = ({ \r\n  size = 'md', \r\n  color = 'blue', \r\n  text = 'Cargando...',\r\n  className = '' \r\n}) => {\r\n  // Configuración de tamaños - Escalabilidad moderna\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-8 h-8', \r\n    lg: 'w-12 h-12',\r\n    xl: 'w-16 h-16'\r\n  };\r\n\r\n  // Configuración de colores - Design system approach\r\n  const colorClasses = {\r\n    blue: 'border-blue-500',\r\n    green: 'border-green-500',\r\n    red: 'border-red-500',\r\n    purple: 'border-purple-500',\r\n    yellow: 'border-yellow-500'\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center p-4 ${className}`}>\r\n      {/* Spinner principal - CSS Animation moderna */}\r\n      <div \r\n        className={`\r\n          ${sizeClasses[size]} \r\n          ${colorClasses[color]}\r\n          border-4 border-t-transparent border-solid rounded-full\r\n          animate-spin\r\n        `}\r\n        role=\"status\"\r\n        aria-label=\"Cargando contenido\"\r\n      />\r\n      \r\n      {/* Texto de carga */}\r\n      {text && (\r\n        <p className=\"mt-2 text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n          {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Variante para elementos inline\r\nexport const InlineSpinner = ({ size = 'sm', color = 'blue' }) => {\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-6 h-6'\r\n  };\r\n\r\n  const colorClasses = {\r\n    blue: 'border-blue-500',\r\n    green: 'border-green-500',\r\n    red: 'border-red-500'\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`\r\n        ${sizeClasses[size]} \r\n        ${colorClasses[color]}\r\n        border-2 border-t-transparent border-solid rounded-full\r\n        animate-spin inline-block\r\n      `}\r\n      role=\"status\"\r\n      aria-label=\"Cargando\"\r\n    />\r\n  );\r\n};\r\n\r\n// Spinner para páginas completas\r\nexport const FullPageSpinner = ({ text = 'Cargando asteroides...' }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-white dark:bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"text-center\">\r\n        <LoadingSpinner size=\"xl\" color=\"blue\" text={text} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook personalizado para estados de carga\r\nexport const useLoading = (initialState = false) => {\r\n  const [isLoading, setIsLoading] = React.useState(initialState);\r\n  \r\n  const startLoading = () => setIsLoading(true);\r\n  const stopLoading = () => setIsLoading(false);\r\n  \r\n  return { isLoading, startLoading, stopLoading };\r\n};\r\n\r\nexport default LoadingSpinner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}