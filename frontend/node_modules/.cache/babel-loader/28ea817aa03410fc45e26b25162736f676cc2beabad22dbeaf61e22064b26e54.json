{"ast":null,"code":"// frontend/src/services/api.js\n/**\r\n * Servicio API para comunicaci√≥n con el backend\r\n * Evoluci√≥n: De fetch b√°sico a cliente HTTP robusto con interceptors y error handling\r\n */\n\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Configuraci√≥n base del cliente API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\nconst API_VERSION = '/api/v1';\n\n// Crear instancia de axios con configuraci√≥n personalizada\nconst apiClient = axios.create({\n  baseURL: `${API_BASE_URL}${API_VERSION}`,\n  timeout: 30000,\n  // 30 segundos\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  // Configuraci√≥n para CORS\n  withCredentials: false\n});\n\n// === INTERCEPTORS ===\n\n// Request interceptor - agregar headers autom√°ticamente\napiClient.interceptors.request.use(config => {\n  // Agregar timestamp para debugging\n  config.metadata = {\n    startTime: new Date()\n  };\n\n  // Agregar token de autenticaci√≥n si existe (futuro)\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Log de request en desarrollo\n  if (process.env.NODE_ENV === 'development') {\n    var _config$method;\n    console.log(`üöÄ API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, {\n      params: config.params,\n      data: config.data\n    });\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor - manejo centralizado de respuestas y errores\napiClient.interceptors.response.use(response => {\n  // Calcular tiempo de respuesta\n  const endTime = new Date();\n  const duration = endTime - response.config.metadata.startTime;\n\n  // Log de response exitosa en desarrollo\n  if (process.env.NODE_ENV === 'development') {\n    var _response$config$meth;\n    console.log(`‚úÖ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, {\n      status: response.status,\n      duration: `${duration}ms`,\n      data: response.data\n    });\n  }\n  return response;\n}, error => {\n  var _config$metadata, _config$method2;\n  // Extraer informaci√≥n del error\n  const {\n    response,\n    request,\n    config\n  } = error;\n\n  // Calcular duraci√≥n si est√° disponible\n  const duration = config !== null && config !== void 0 && (_config$metadata = config.metadata) !== null && _config$metadata !== void 0 && _config$metadata.startTime ? new Date() - config.metadata.startTime : 'unknown';\n\n  // Log de error\n  console.error(`‚ùå API Error: ${config === null || config === void 0 ? void 0 : (_config$method2 = config.method) === null || _config$method2 === void 0 ? void 0 : _config$method2.toUpperCase()} ${config === null || config === void 0 ? void 0 : config.url}`, {\n    status: response === null || response === void 0 ? void 0 : response.status,\n    duration: `${duration}ms`,\n    message: error.message,\n    data: response === null || response === void 0 ? void 0 : response.data\n  });\n\n  // Manejo espec√≠fico de errores HTTP\n  if (response) {\n    // El servidor respondi√≥ con un c√≥digo de error\n    const {\n      status,\n      data\n    } = response;\n    switch (status) {\n      case 400:\n        toast.error(data.message || 'Solicitud inv√°lida');\n        break;\n      case 401:\n        toast.error('No autorizado');\n        // Redirigir a login si es necesario\n        break;\n      case 403:\n        toast.error('Acceso denegado');\n        break;\n      case 404:\n        toast.error(data.message || 'Recurso no encontrado');\n        break;\n      case 422:\n        toast.error(data.message || 'Error de validaci√≥n');\n        break;\n      case 429:\n        toast.error('Demasiadas solicitudes. Intenta m√°s tarde.');\n        break;\n      case 500:\n        toast.error('Error interno del servidor');\n        break;\n      case 503:\n        toast.error('Servicio no disponible temporalmente');\n        break;\n      default:\n        toast.error(`Error del servidor: ${status}`);\n    }\n\n    // Crear error estructurado\n    const apiError = new Error(data.message || `HTTP ${status} Error`);\n    apiError.status = status;\n    apiError.data = data;\n    return Promise.reject(apiError);\n  } else if (request) {\n    // Request se hizo pero no hay respuesta (timeout, network error, etc.)\n    toast.error('Error de conexi√≥n. Verifica tu conexi√≥n a internet.');\n    const networkError = new Error('Network Error');\n    networkError.isNetworkError = true;\n    return Promise.reject(networkError);\n  } else {\n    // Error al configurar el request\n    toast.error('Error al procesar la solicitud');\n    return Promise.reject(error);\n  }\n});\n\n// === FUNCIONES DE UTILIDAD ===\n\n/**\r\n * Maneja par√°metros de consulta de forma consistente\r\n */\nconst buildQueryParams = params => {\n  const cleanParams = {};\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      cleanParams[key] = value;\n    }\n  });\n  return cleanParams;\n};\n\n/**\r\n * Wrapper para requests GET con manejo de par√°metros\r\n */\nconst get = async (url, params = {}, config = {}) => {\n  const response = await apiClient.get(url, {\n    params: buildQueryParams(params),\n    ...config\n  });\n  return response.data;\n};\n\n/**\r\n * Wrapper para requests POST\r\n */\nconst post = async (url, data = {}, config = {}) => {\n  const response = await apiClient.post(url, data, config);\n  return response.data;\n};\n\n/**\r\n * Wrapper para requests PUT\r\n */\nconst put = async (url, data = {}, config = {}) => {\n  const response = await apiClient.put(url, data, config);\n  return response.data;\n};\n\n/**\r\n * Wrapper para requests DELETE\r\n */\nconst del = async (url, config = {}) => {\n  const response = await apiClient.delete(url, config);\n  return response.data;\n};\n\n// === API ENDPOINTS ESPEC√çFICOS ===\n\n/**\r\n * API de Asteroides\r\n */\nexport const asteroidAPI = {\n  // Buscar asteroides con filtros\n  search: (filters = {}) => get('/asteroids/', filters),\n  // Obtener asteroide por ID\n  getById: id => get(`/asteroids/${id}`),\n  // Obtener asteroide por NEO ID\n  getByNeoId: neoId => get(`/asteroids/neo/${neoId}`),\n  // Asteroides potencialmente peligrosos\n  getDangerous: (daysAhead = 30, limit = 50) => get('/asteroids/dangerous/', {\n    days_ahead: daysAhead,\n    limit\n  }),\n  // Pr√≥ximas aproximaciones\n  getUpcoming: (daysAhead = 7, limit = 20) => get('/asteroids/upcoming/', {\n    days_ahead: daysAhead,\n    limit\n  }),\n  // Asteroides m√°s grandes\n  getLargest: (limit = 10) => get('/asteroids/largest/', {\n    limit\n  }),\n  // Aproximaciones m√°s cercanas\n  getClosest: (limit = 10) => get('/asteroids/closest/', {\n    limit\n  }),\n  // Estad√≠sticas generales\n  getStatistics: () => get('/asteroids/statistics/'),\n  // Estad√≠sticas de aproximaciones\n  getApproachStatistics: () => get('/asteroids/statistics/approaches/'),\n  // Recalcular riesgo\n  calculateRisk: id => post(`/asteroids/${id}/calculate-risk/`),\n  // Sincronizar con NASA\n  syncWithNasa: (daysRange = 7) => post('/asteroids/sync/nasa/', {}, {\n    params: {\n      days_range: daysRange\n    }\n  }),\n  // Health check espec√≠fico\n  healthCheck: () => get('/asteroids/health/')\n};\n\n/**\r\n * API del Sistema\r\n */\nexport const systemAPI = {\n  // Informaci√≥n general\n  getInfo: () => apiClient.get(`${API_BASE_URL}/info`).then(res => res.data),\n  // Health check general\n  healthCheck: () => apiClient.get(`${API_BASE_URL}/health`).then(res => res.data),\n  // M√©tricas del sistema\n  getMetrics: () => apiClient.get(`${API_BASE_URL}/metrics`).then(res => res.data),\n  // Informaci√≥n ra√≠z\n  getRoot: () => apiClient.get(`${API_BASE_URL}/`).then(res => res.data)\n};\n\n// === HOOKS PERSONALIZADOS PARA REACT QUERY ===\n\n/**\r\n * Hook para usar con React Query - simplifica el manejo de estado\r\n */\nexport const useApiQuery = (queryKey, queryFn, options = {}) => {\n  return {\n    queryKey,\n    queryFn,\n    ...options\n  };\n};\n\n/**\r\n * Configuraciones predefinidas para React Query\r\n */\nexport const queryConfigs = {\n  // Datos que cambian frecuentemente\n  realtime: {\n    staleTime: 0,\n    cacheTime: 1 * 60 * 1000,\n    // 1 minuto\n    refetchInterval: 30 * 1000 // cada 30 segundos\n  },\n  // Datos que cambian ocasionalmente\n  dynamic: {\n    staleTime: 2 * 60 * 1000,\n    // 2 minutos\n    cacheTime: 5 * 60 * 1000 // 5 minutos\n  },\n  // Datos relativamente est√°ticos\n  static: {\n    staleTime: 10 * 60 * 1000,\n    // 10 minutos\n    cacheTime: 30 * 60 * 1000 // 30 minutos\n  },\n  // Datos que rara vez cambian\n  stable: {\n    staleTime: 60 * 60 * 1000,\n    // 1 hora\n    cacheTime: 24 * 60 * 60 * 1000 // 24 horas\n  }\n};\n\n// === UTILIDADES DE DESARROLLO ===\n\n/**\r\n * Funci√≥n para testear la conexi√≥n con el backend\r\n */\nexport const testConnection = async () => {\n  try {\n    console.log('üîç Testing API connection...');\n    const rootInfo = await systemAPI.getRoot();\n    console.log('‚úÖ API Root accessible:', rootInfo);\n    const health = await systemAPI.healthCheck();\n    console.log('‚úÖ Health check passed:', health);\n    const asteroids = await asteroidAPI.search({\n      page: 1,\n      page_size: 1\n    });\n    console.log('‚úÖ Asteroids API working:', asteroids);\n    toast.success('Conexi√≥n con API establecida correctamente');\n    return true;\n  } catch (error) {\n    console.error('‚ùå API connection test failed:', error);\n    toast.error('Error al conectar con la API');\n    return false;\n  }\n};\n\n/**\r\n * Funci√≥n para obtener informaci√≥n del API\r\n */\nexport const getApiInfo = async () => {\n  try {\n    const [rootInfo, systemInfo, health] = await Promise.all([systemAPI.getRoot(), systemAPI.getInfo(), systemAPI.healthCheck()]);\n    return {\n      root: rootInfo,\n      system: systemInfo,\n      health: health,\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error getting API info:', error);\n    throw error;\n  }\n};\n\n// === EXPORTACIONES ===\n\n// Cliente axios raw por si se necesita acceso directo\nexport { apiClient };\n\n// Funciones HTTP b√°sicas\nexport const api = {\n  get,\n  post,\n  put,\n  delete: del,\n  client: apiClient\n};\n\n// Configuraci√≥n\nexport const config = {\n  baseURL: API_BASE_URL,\n  version: API_VERSION,\n  timeout: apiClient.defaults.timeout\n};\n\n// Exportaci√≥n por defecto con todas las APIs\nexport default {\n  asteroids: asteroidAPI,\n  system: systemAPI,\n  utils: {\n    testConnection,\n    getApiInfo,\n    buildQueryParams\n  },\n  config,\n  client: apiClient\n};","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","API_VERSION","apiClient","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","metadata","startTime","Date","token","localStorage","getItem","Authorization","NODE_ENV","_config$method","console","log","method","toUpperCase","url","params","data","error","Promise","reject","response","endTime","duration","_response$config$meth","status","_config$metadata","_config$method2","message","apiError","Error","networkError","isNetworkError","buildQueryParams","cleanParams","Object","entries","forEach","key","value","undefined","get","post","put","del","delete","asteroidAPI","search","filters","getById","id","getByNeoId","neoId","getDangerous","daysAhead","limit","days_ahead","getUpcoming","getLargest","getClosest","getStatistics","getApproachStatistics","calculateRisk","syncWithNasa","daysRange","days_range","healthCheck","systemAPI","getInfo","then","res","getMetrics","getRoot","useApiQuery","queryKey","queryFn","options","queryConfigs","realtime","staleTime","cacheTime","refetchInterval","dynamic","static","stable","testConnection","rootInfo","health","asteroids","page","page_size","success","getApiInfo","systemInfo","all","root","system","timestamp","toISOString","api","client","version","defaults","utils"],"sources":["C:/Users/Fran/Desktop/Neo_Tracker/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\n/**\r\n * Servicio API para comunicaci√≥n con el backend\r\n * Evoluci√≥n: De fetch b√°sico a cliente HTTP robusto con interceptors y error handling\r\n */\r\n\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Configuraci√≥n base del cliente API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\r\nconst API_VERSION = '/api/v1';\r\n\r\n// Crear instancia de axios con configuraci√≥n personalizada\r\nconst apiClient = axios.create({\r\n  baseURL: `${API_BASE_URL}${API_VERSION}`,\r\n  timeout: 30000, // 30 segundos\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  // Configuraci√≥n para CORS\r\n  withCredentials: false,\r\n});\r\n\r\n// === INTERCEPTORS ===\r\n\r\n// Request interceptor - agregar headers autom√°ticamente\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Agregar timestamp para debugging\r\n    config.metadata = { startTime: new Date() };\r\n    \r\n    // Agregar token de autenticaci√≥n si existe (futuro)\r\n    const token = localStorage.getItem('auth_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Log de request en desarrollo\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}`, {\r\n        params: config.params,\r\n        data: config.data,\r\n      });\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor - manejo centralizado de respuestas y errores\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    // Calcular tiempo de respuesta\r\n    const endTime = new Date();\r\n    const duration = endTime - response.config.metadata.startTime;\r\n    \r\n    // Log de response exitosa en desarrollo\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`‚úÖ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`, {\r\n        status: response.status,\r\n        duration: `${duration}ms`,\r\n        data: response.data,\r\n      });\r\n    }\r\n    \r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Extraer informaci√≥n del error\r\n    const { response, request, config } = error;\r\n    \r\n    // Calcular duraci√≥n si est√° disponible\r\n    const duration = config?.metadata?.startTime \r\n      ? new Date() - config.metadata.startTime \r\n      : 'unknown';\r\n    \r\n    // Log de error\r\n    console.error(`‚ùå API Error: ${config?.method?.toUpperCase()} ${config?.url}`, {\r\n      status: response?.status,\r\n      duration: `${duration}ms`,\r\n      message: error.message,\r\n      data: response?.data,\r\n    });\r\n    \r\n    // Manejo espec√≠fico de errores HTTP\r\n    if (response) {\r\n      // El servidor respondi√≥ con un c√≥digo de error\r\n      const { status, data } = response;\r\n      \r\n      switch (status) {\r\n        case 400:\r\n          toast.error(data.message || 'Solicitud inv√°lida');\r\n          break;\r\n        case 401:\r\n          toast.error('No autorizado');\r\n          // Redirigir a login si es necesario\r\n          break;\r\n        case 403:\r\n          toast.error('Acceso denegado');\r\n          break;\r\n        case 404:\r\n          toast.error(data.message || 'Recurso no encontrado');\r\n          break;\r\n        case 422:\r\n          toast.error(data.message || 'Error de validaci√≥n');\r\n          break;\r\n        case 429:\r\n          toast.error('Demasiadas solicitudes. Intenta m√°s tarde.');\r\n          break;\r\n        case 500:\r\n          toast.error('Error interno del servidor');\r\n          break;\r\n        case 503:\r\n          toast.error('Servicio no disponible temporalmente');\r\n          break;\r\n        default:\r\n          toast.error(`Error del servidor: ${status}`);\r\n      }\r\n      \r\n      // Crear error estructurado\r\n      const apiError = new Error(data.message || `HTTP ${status} Error`);\r\n      apiError.status = status;\r\n      apiError.data = data;\r\n      return Promise.reject(apiError);\r\n      \r\n    } else if (request) {\r\n      // Request se hizo pero no hay respuesta (timeout, network error, etc.)\r\n      toast.error('Error de conexi√≥n. Verifica tu conexi√≥n a internet.');\r\n      const networkError = new Error('Network Error');\r\n      networkError.isNetworkError = true;\r\n      return Promise.reject(networkError);\r\n      \r\n    } else {\r\n      // Error al configurar el request\r\n      toast.error('Error al procesar la solicitud');\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\n// === FUNCIONES DE UTILIDAD ===\r\n\r\n/**\r\n * Maneja par√°metros de consulta de forma consistente\r\n */\r\nconst buildQueryParams = (params) => {\r\n  const cleanParams = {};\r\n  \r\n  Object.entries(params || {}).forEach(([key, value]) => {\r\n    if (value !== undefined && value !== null && value !== '') {\r\n      cleanParams[key] = value;\r\n    }\r\n  });\r\n  \r\n  return cleanParams;\r\n};\r\n\r\n/**\r\n * Wrapper para requests GET con manejo de par√°metros\r\n */\r\nconst get = async (url, params = {}, config = {}) => {\r\n  const response = await apiClient.get(url, {\r\n    params: buildQueryParams(params),\r\n    ...config,\r\n  });\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Wrapper para requests POST\r\n */\r\nconst post = async (url, data = {}, config = {}) => {\r\n  const response = await apiClient.post(url, data, config);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Wrapper para requests PUT\r\n */\r\nconst put = async (url, data = {}, config = {}) => {\r\n  const response = await apiClient.put(url, data, config);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Wrapper para requests DELETE\r\n */\r\nconst del = async (url, config = {}) => {\r\n  const response = await apiClient.delete(url, config);\r\n  return response.data;\r\n};\r\n\r\n// === API ENDPOINTS ESPEC√çFICOS ===\r\n\r\n/**\r\n * API de Asteroides\r\n */\r\nexport const asteroidAPI = {\r\n  // Buscar asteroides con filtros\r\n  search: (filters = {}) => \r\n    get('/asteroids/', filters),\r\n  \r\n  // Obtener asteroide por ID\r\n  getById: (id) => \r\n    get(`/asteroids/${id}`),\r\n  \r\n  // Obtener asteroide por NEO ID\r\n  getByNeoId: (neoId) => \r\n    get(`/asteroids/neo/${neoId}`),\r\n  \r\n  // Asteroides potencialmente peligrosos\r\n  getDangerous: (daysAhead = 30, limit = 50) => \r\n    get('/asteroids/dangerous/', { days_ahead: daysAhead, limit }),\r\n  \r\n  // Pr√≥ximas aproximaciones\r\n  getUpcoming: (daysAhead = 7, limit = 20) => \r\n    get('/asteroids/upcoming/', { days_ahead: daysAhead, limit }),\r\n  \r\n  // Asteroides m√°s grandes\r\n  getLargest: (limit = 10) => \r\n    get('/asteroids/largest/', { limit }),\r\n  \r\n  // Aproximaciones m√°s cercanas\r\n  getClosest: (limit = 10) => \r\n    get('/asteroids/closest/', { limit }),\r\n  \r\n  // Estad√≠sticas generales\r\n  getStatistics: () => \r\n    get('/asteroids/statistics/'),\r\n  \r\n  // Estad√≠sticas de aproximaciones\r\n  getApproachStatistics: () => \r\n    get('/asteroids/statistics/approaches/'),\r\n  \r\n  // Recalcular riesgo\r\n  calculateRisk: (id) => \r\n    post(`/asteroids/${id}/calculate-risk/`),\r\n  \r\n  // Sincronizar con NASA\r\n  syncWithNasa: (daysRange = 7) => \r\n    post('/asteroids/sync/nasa/', {}, { params: { days_range: daysRange } }),\r\n  \r\n  // Health check espec√≠fico\r\n  healthCheck: () => \r\n    get('/asteroids/health/'),\r\n};\r\n\r\n/**\r\n * API del Sistema\r\n */\r\nexport const systemAPI = {\r\n  // Informaci√≥n general\r\n  getInfo: () => \r\n    apiClient.get(`${API_BASE_URL}/info`).then(res => res.data),\r\n  \r\n  // Health check general\r\n  healthCheck: () => \r\n    apiClient.get(`${API_BASE_URL}/health`).then(res => res.data),\r\n  \r\n  // M√©tricas del sistema\r\n  getMetrics: () => \r\n    apiClient.get(`${API_BASE_URL}/metrics`).then(res => res.data),\r\n  \r\n  // Informaci√≥n ra√≠z\r\n  getRoot: () => \r\n    apiClient.get(`${API_BASE_URL}/`).then(res => res.data),\r\n};\r\n\r\n// === HOOKS PERSONALIZADOS PARA REACT QUERY ===\r\n\r\n/**\r\n * Hook para usar con React Query - simplifica el manejo de estado\r\n */\r\nexport const useApiQuery = (queryKey, queryFn, options = {}) => {\r\n  return {\r\n    queryKey,\r\n    queryFn,\r\n    ...options,\r\n  };\r\n};\r\n\r\n/**\r\n * Configuraciones predefinidas para React Query\r\n */\r\nexport const queryConfigs = {\r\n  // Datos que cambian frecuentemente\r\n  realtime: {\r\n    staleTime: 0,\r\n    cacheTime: 1 * 60 * 1000, // 1 minuto\r\n    refetchInterval: 30 * 1000, // cada 30 segundos\r\n  },\r\n  \r\n  // Datos que cambian ocasionalmente\r\n  dynamic: {\r\n    staleTime: 2 * 60 * 1000, // 2 minutos\r\n    cacheTime: 5 * 60 * 1000, // 5 minutos\r\n  },\r\n  \r\n  // Datos relativamente est√°ticos\r\n  static: {\r\n    staleTime: 10 * 60 * 1000, // 10 minutos\r\n    cacheTime: 30 * 60 * 1000, // 30 minutos\r\n  },\r\n  \r\n  // Datos que rara vez cambian\r\n  stable: {\r\n    staleTime: 60 * 60 * 1000, // 1 hora\r\n    cacheTime: 24 * 60 * 60 * 1000, // 24 horas\r\n  },\r\n};\r\n\r\n// === UTILIDADES DE DESARROLLO ===\r\n\r\n/**\r\n * Funci√≥n para testear la conexi√≥n con el backend\r\n */\r\nexport const testConnection = async () => {\r\n  try {\r\n    console.log('üîç Testing API connection...');\r\n    \r\n    const rootInfo = await systemAPI.getRoot();\r\n    console.log('‚úÖ API Root accessible:', rootInfo);\r\n    \r\n    const health = await systemAPI.healthCheck();\r\n    console.log('‚úÖ Health check passed:', health);\r\n    \r\n    const asteroids = await asteroidAPI.search({ page: 1, page_size: 1 });\r\n    console.log('‚úÖ Asteroids API working:', asteroids);\r\n    \r\n    toast.success('Conexi√≥n con API establecida correctamente');\r\n    return true;\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå API connection test failed:', error);\r\n    toast.error('Error al conectar con la API');\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Funci√≥n para obtener informaci√≥n del API\r\n */\r\nexport const getApiInfo = async () => {\r\n  try {\r\n    const [rootInfo, systemInfo, health] = await Promise.all([\r\n      systemAPI.getRoot(),\r\n      systemAPI.getInfo(),\r\n      systemAPI.healthCheck(),\r\n    ]);\r\n    \r\n    return {\r\n      root: rootInfo,\r\n      system: systemInfo,\r\n      health: health,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting API info:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// === EXPORTACIONES ===\r\n\r\n// Cliente axios raw por si se necesita acceso directo\r\nexport { apiClient };\r\n\r\n// Funciones HTTP b√°sicas\r\nexport const api = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: del,\r\n  client: apiClient,\r\n};\r\n\r\n// Configuraci√≥n\r\nexport const config = {\r\n  baseURL: API_BASE_URL,\r\n  version: API_VERSION,\r\n  timeout: apiClient.defaults.timeout,\r\n};\r\n\r\n// Exportaci√≥n por defecto con todas las APIs\r\nexport default {\r\n  asteroids: asteroidAPI,\r\n  system: systemAPI,\r\n  utils: {\r\n    testConnection,\r\n    getApiInfo,\r\n    buildQueryParams,\r\n  },\r\n  config,\r\n  client: apiClient,\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}